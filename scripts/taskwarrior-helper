#!/usr/bin/env bash

function help() {
  cat <<EOF
Usage:
  taskwarrior-helper FLAG <FLAG_ARGS> COMMAND <COMMAND_ARGS>

Flags:
  -h                   Display this message and exits

Commands
  c [CONTEXT]            Change context
  d [TASK_ARGS]          Overdue and due today
  e <id>                 Edit task
  help                   Display this message and exits
  k [TASK_ARGS]          List five most urgent tasks
  m <id> [TASK_ARGS]     Modify task
  purge                  Purge all deleted tasks
  q [TASK_ARGS]          Manage +quick tasks
  s                      Synchronize Database
  t                      Launch Taskwarrior TUI
  v                      Launch VIT
EOF
}

function check_dependencies() {
  local check_command=$@
  for cmd in $check_command; do
    command -v "$cmd" >/dev/null 2>&1 || {
      echo "$cmd is not installed. Install it and try again."
      exit 1
    }
  done
}

function repeat() {
  task "$@"
}

function get_id() {
  check_dependencies jq fzf
  task status:pending export | jq -r '.[] | "\(.id) | \(.description)"' | fzf | awk -F " " '{print $1}'
}

function _task() {
  local args=$*
  if [[ $(uname -a) =~ "Android" ]]; then
    task termux "$args"
  else
    task "$args"
  fi
}

function commands() {
  case "$command" in
  d) # overdue/due today
    task status:pending +READY due.before:tomorrow sort:due "$args"
    ;;
  c) # context
    if [ -z "$args" ]; then
      task context none
    else
      task context "$args"
    fi
    ;;
  e) # edit
    if [ -z "$id" ]; then
      id=$(get_id)
    fi
    task "$id" edit
    ;;
  help)
    help
    exit 0
    ;;
  k) # show top 5
    _task limit:5 "$args"
    ;;
  m) # modify
    if [ -z "$args" ]; then
      echo "No arguments used!"
      echo "Use: tt m <args>"
      exit 1
    fi
    if [ -z "$id" ]; then
      id=$(get_id)
    fi
    task "$id" modify "$args"
    ;;
  purge)
    task +DELETED purge
    ;;
  q) # +quick
    task add +quick "$args"
    ;;
  r) # repeat
    echo "Repeating: task $args"
    echo "Enter task arguments (blank to quit):"
    while true; do
      read repeat_args
      if [[ "$repeat_args" == "" ]]; then
        break
      fi
      repeat "$args" "$repeat_args"
    done
    ;;
  s) # sync
    task sync
    ;;
  t)
    taskwarrior-tui
    ;;
  v)
    vit
    ;;
  *) # any command
    _task "$command" "$args"
    ;;
  esac
}

while getopts ":h" opt; do
  case "$opt" in
  h)
    help
    exit 0
    ;;
  ?)
    echo "Error: Invalid option '-$OPTARG'" >&2
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

function main() {
  command=$1
  shift
  if [[ "$1" =~ ^[0-9]+$ ]]; then
    id=$1
    shift
  fi
  args="$@"
  commands
}

main "$@"
