#!/usr/bin/env bash

# "Downloads videos/audio from a FreeTube playlist file"

if ! command -v jq &>/dev/null; then
  echo "jq could not be found. Please install it."
  exit 1
fi

function get_url() {
  get_playlist
  if [[ -z "$playlist" ]]; then
    echo "No playlist selected. Exiting."
    exit 1
  fi
  jq -r "select(.playlistName == \"$playlist\") | .videos[].videoId | \"https://youtu.be/\" + ." "$file" >$PWD/"$playlist".txt
}

function get_data() {
  get_playlist
  if [[ -z "$playlist" ]]; then
    echo "No playlist selected. Exiting."
    exit 1
  fi
  jq -r --arg playlist "$playlist" '
  select(.playlistName == $playlist) |
  .videos[] |
  "https://youtu.be/\(.videoId) | \(.author) - \(.title)"
' "$file" >"$PWD/$playlist.txt"
}

function get_playlist() {
  playlist=$(jq -r '.playlistName' $file | fzf --prompt "Select a playlist: ")
}

function download() {
  ~/scripts/yt-download -b $PWD/"$playlist".txt $format
}

function convert_csv() {
  get_playlist
  if [[ -z "$playlist" ]]; then
    echo "No playlist selected. Exiting."
    exit 1
  fi
  local CSV_FILE=$playlist.csv
  echo "PlaylistBrowseId,PlaylistName,MediaId,Title,Artists,Duration,ThumbnailUrl" >"$CSV_FILE"
  jq -r --arg playlist "$playlist" '
  select(.playlistName == $playlist) |
  .videos[] |
  [
    "",                                    # PlaylistBrowseId (empty)
    $playlist,                             # PlaylistName
    .videoId,                              # MediaId
    .title,                                # Title
    .author,                               # Artists
    .lengthSeconds,                        # Duration
    "https://i.ytimg.com/vi/\(.videoId)/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3mxVLf0HKKFUs-7skSC69E4P2M43Q" # ThumbnailUrl
  ] | @csv
' "$file" >>"$CSV_FILE"
}

function main() {
  case "$1" in
  store)
    shift
    file=$1 # FreeTube.db
    get_data
    ;;
  convert)
    shift
    file=$1 # FreeTube.db
    convert_csv
    ;;
  *)
    file=$1   # FreeTube.db
    format=$2 # video/audio
    if [[ -z "$file" || -z "$format" ]]; then
      echo "Usage: $0 [file] [format]"
      echo "Format: video/audio"
      exit 1
    fi
    get_url
    download
    ;;
  esac
}

main "$@"
