#!/usr/bin/env bash

# "Quickly clone all Git repos, or fetch all"

DEV_DIR=${DEV:-$HOME/dev}
REPOX_FILE="$HOME/.repox"

function help() {
  cat <<EOF
Git Repository Cloner/Fetcher

Usage:
  repox FLAG <FLAG_INPUT> SUB_DIRECTORY
  repox github         # $DEV_DIR/github/
  repox codeberg       # $DEV_DIR/codeberg/

Commands:
  fetch               Fetch all repos
  pull                Pull all repos
  status              Check status from all repos

Flags:
  -h, --help           Displays this message and exits
  -p <path>            Use a .repox file
  -r                   Use Repox File
EOF
}

function get_repos() {
  gh repo list | grep "$(whoami)" | awk -F " " '{print $1}' >$TMP_DIR
}

function fetch() {
  CMD=${CMD:-fetch}
  success_count=0
  error_count=0

  while IFS= read -r repo; do
    if [ -n "$REPOX" ]; then
      repo_name=$(basename "$repo" .git)
    else
      repo_name="$(basename "$repo")"
    fi
    local local_repo="$DEV_DIR/$sub_dir/$repo_name"
    if [ ! -d "$local_repo" ]; then
      if [ "$sub_dir" == "github" ]; then
        if ! gh repo clone "$repo" "$local_repo"; then
          ((error_count++))
          echo "An error occured at $repo"
        fi
      else
        mkdir -p "$DEV_DIR/$sub_dir"
        if ! git -C "$DEV_DIR/$sub_dir" clone "$repo"; then
          echo "An error occured at $repo"
          ((error_count++))
          continue
        fi
      fi
    else
      if [ "$CMD" == "status" ]; then
        if git -C "$local_repo" "$CMD" --porcelain | grep -q .; then
          git -C "$local_repo" "$CMD"
        fi
      else
        if ! git -C "$local_repo" "$CMD"; then
          echo "An error occured at $repo"
          ((error_count++))
          continue
        fi
      fi
    fi
    ((success_count++))
  done <"$TMP_DIR"
  echo -e "\nRepox finished with:\n$error_count errors\n$success_count success"
}

function main() {
  if [ -z "$sub_dir" ]; then
    echo "Missing sub directory!"
    echo "Usage: repox github"
    exit 1
  fi
  if [ -n "$REPOX" ]; then
    TMP_DIR="$REPOX_FILE" # URL to all Git repos
  else
    TMP_DIR="/tmp/repox"
    get_repos # Use gh to get all Github repos
  fi
  fetch
}

while getopts ":hvrp:-" opt; do
  case "$opt" in
  h)
    help
    exit 0
    ;;
  r)
    REPOX=true
    ;;
  -)
    break
    ;;
  p)
    REPOX_FILE="$OPTARG"
    ;;
  ?)
    echo "Error: Invalid option '-$OPTARG'" >&2
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

case "$1" in
--help)
  usage
  exit 0
  ;;
fetch)
  shift
  sub_dir=$1
  CMD=fetch
  main
  ;;
pull)
  shift
  sub_dir=$1
  CMD=pull
  main
  ;;
status)
  shift
  sub_dir=$1
  CMD=status
  main
  ;;
esac
